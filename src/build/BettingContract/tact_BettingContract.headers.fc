;;
;; Header files for BettingContract
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $NewBet$_load
(slice, ((slice, int, slice))) $NewBet$_load(slice sc_0) inline;

;; $NewBetResponse$_store
builder $NewBetResponse$_store(builder build_0, (int) v) inline;

;; $NewBetResponse$_store_cell
cell $NewBetResponse$_store_cell((int) v) inline;

;; $CloseBet$_load
(slice, ((int, int))) $CloseBet$_load(slice sc_0) inline;

;; $InternalSetBet$_store
builder $InternalSetBet$_store(builder build_0, (slice, int, slice, slice) v) inline;

;; $InternalSetBet$_store_cell
cell $InternalSetBet$_store_cell((slice, int, slice, slice) v) inline;

;; $InternalCloseBet$_store
builder $InternalCloseBet$_store(builder build_0, (slice) v) inline;

;; $InternalCloseBet$_store_cell
cell $InternalCloseBet$_store_cell((slice) v) inline;

;; $BettingContract$_store
builder $BettingContract$_store(builder build_0, (int, slice, int) v) inline;

;; $BettingContract$_load
(slice, ((int, slice, int))) $BettingContract$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Bet$init$_store
builder $Bet$init$_store(builder build_0, (slice, int, slice) v) inline;

;; $BettingContract$init$_load
(slice, ((int))) $BettingContract$init$_load(slice sc_0) inline;

;; $BettingContract$_contract_init
(int, slice, int) $BettingContract$_contract_init(int $id) impure inline_ref;

;; $BettingContract$_contract_load
(int, slice, int) $BettingContract$_contract_load() impure inline_ref;

;; $BettingContract$_contract_store
() $BettingContract$_contract_store((int, slice, int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Bet$_init_child
(cell, cell) $Bet$_init_child(cell sys', slice $parent, int $seqno, slice $owner) inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $BettingContract$_fun_betsCounter
((int, slice, int), int) $BettingContract$_fun_betsCounter((int, slice, int) $self) impure inline_ref;

;; $BettingContract$_fun_betAdress
((int, slice, int), slice) $BettingContract$_fun_betAdress((int, slice, int) $self, int $seqno) impure inline_ref;

;; $BettingContract$_fun_forward
((int, slice, int), ()) $BettingContract$_fun_forward((int, slice, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $BettingContract$_fun_reply
((int, slice, int), ()) $BettingContract$_fun_reply((int, slice, int) $self, cell $body) impure inline;

;; $BettingContract$_fun_notify
((int, slice, int), ()) $BettingContract$_fun_notify((int, slice, int) $self, cell $body) impure inline;

;; $BettingContract$_fun_requireOwner
((int, slice, int), ()) $BettingContract$_fun_requireOwner((int, slice, int) $self) impure inline_ref;

;; $BettingContract$_fun_owner
((int, slice, int), slice) $BettingContract$_fun_owner((int, slice, int) $self) impure inline_ref;

;; $SendParameters$_constructor_to_body_value_mode_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_body_value_mode_code_data(slice to, cell body, int value, int mode, cell code, cell data) inline;

;; $InternalSetBet$_constructor_chosenTeam_hackatonPosition_buildLink_owner
((slice, int, slice, slice)) $InternalSetBet$_constructor_chosenTeam_hackatonPosition_buildLink_owner(slice chosenTeam, int hackatonPosition, slice buildLink, slice owner) inline;

;; $NewBetResponse$_constructor_seqno
((int)) $NewBetResponse$_constructor_seqno(int seqno) inline;

;; $SendParameters$_constructor_to_body_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_body_value_mode(slice to, cell body, int value, int mode) inline;

;; $InternalCloseBet$_constructor_excess
((slice)) $InternalCloseBet$_constructor_excess(slice excess) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
